<svg #svg [attr.width]="width" [attr.height]="height"
  (mousemove)="onDrag ($event)"
  (mouseup)="onEndDrag ($event)"
  (mouseleave)="onEndDrag ($event)"
  (touchmove)="onDrag ($event)"
  (touchend)="onEndDrag ($event)"
  (touchleave)="onEndDrag ($event)"
  (touchcancel)="onEndDrag ($event)">
  <g #gContent [attr.transform]="'translate(' + translateX + ',0)'">
    <path
      *ngFor="let edge of edges; trackBy: edgeTrackBy"
      class="s-hierarchy-edge"
      [ngClass]="edge.edgeCssClasses"
      [attr.d]="edge.edgePath">
    </path>
    <g *ngFor="let node of nodes; trackBy: nodeTrackBy"
      (mousedown)="onStartDrag ($event, node)"
      (touchstart)="onStartDrag ($event, node)"
      (click)="onNodeClick (node)"
      class="s-hierarchy-node"
      [sSvgGRect]="createHierarchyNodeWrapper"
      [sSvgGRectPaddingLeft]="hierarchyNodeWrapperPaddingLeft"
      sSvgGRectClass="s-hierarchy-node-wrapper"
      [ngClass]="node.nodeCssClasses"
      [attr.transform]="'translate(' + node.point.y + ',' + node.point.x + ')'">
      <ng-container *ngTemplateOutlet="nodeTemplate || defaultNodeTemplate; context: { node: node }"></ng-container>
    </g>
  </g>
</svg>
<ng-template #defaultNodeTemplate let-node="node">
  <svg:circle class="s-hierarchy-default-node-shape" r="2.5">
  </svg:circle>
  <svg:text
    dy="3"
    [ngClass]="(globalLeafSorting && !node.hasChildren) ? 's-hierarchy-drag-handle' : ''"
    [attr.x]="node.hasChildren ? -8 : 8"
    [attr.text-anchor]="node.hasChildren ? 'end' : 'start'">
    {{node.label}}
  </svg:text>
</ng-template>
